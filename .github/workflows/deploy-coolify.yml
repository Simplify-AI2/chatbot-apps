name: Build & Deploy to Coolify

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-push:
    name: Build & Push Docker image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short commit SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Check for Backend Changes
        id: backend_changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q '^backend/'; then
            echo "BACKEND_CHANGED=true" >> $GITHUB_ENV
          else
            echo "BACKEND_CHANGED=false" >> $GITHUB_ENV

      - name: Check for Frontend Changes
        id: frontend_changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q -E '^(src/|public/|Dockerfile|vite.config.ts)'; then
            echo "FRONTEND_CHANGED=true" >> $GITHUB_ENV
          else
            echo "FRONTEND_CHANGED=false" >> $GITHUB_ENV

      - name: Build & push Backend
        if: ${{ env.BACKEND_CHANGED == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          tags: |
            ghcr.io/${{ github.repository }}-backend:latest
            ghcr.io/${{ github.repository }}-backend:${{ env.SHORT_SHA }}

      - name: Build & push Frontend
        if: ${{ env.FRONTEND_CHANGED == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            VITE_API_BASE_URL=http://localhost:3001
            VITE_ENABLE_TTS=true
            VITE_ENABLE_STT=true
          tags: |
            ghcr.io/${{ github.repository }}-frontend:latest
            ghcr.io/${{ github.repository }}-frontend:${{ env.SHORT_SHA }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    name: Deploy to Coolify
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Trigger Coolify Deployment for Backend
        if: ${{ env.BACKEND_CHANGED == 'true' }}
        run: |
          curl --request GET \
            "${{ secrets.COOLIFY_WEBHOOK_BACKEND }}" \
            --header "Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}"

      - name: Trigger Coolify Deployment for Frontend
        if: ${{ env.FRONTEND_CHANGED == 'true' }}
        run: |
          curl --request GET \
            "${{ secrets.COOLIFY_WEBHOOK_FRONTEND }}" \
            --header "Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}"
