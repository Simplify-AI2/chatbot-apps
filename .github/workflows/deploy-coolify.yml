name: Build & Deploy to Coolify

on:
  push:
    branches:
      - main     # Production deployment
      - develop  # Development deployment  
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - development
      force_deploy:
        description: 'Force deploy both frontend and backend'
        required: false
        default: false
        type: boolean
      deploy_backend:
        description: 'Force deploy backend only'
        required: false
        default: false
        type: boolean
      deploy_frontend:
        description: 'Force deploy frontend only'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  packages: write

jobs:
  build-push:
    name: Build & Push Docker image
    runs-on: ubuntu-latest
    outputs:
      backend_changed: ${{ steps.backend_changes.outputs.changed }}
      frontend_changed: ${{ steps.frontend_changes.outputs.changed }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repository name
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set environment variables
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.event.inputs.environment }}" == "production" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "API_BASE_URL=${{ secrets.PROD_API_BASE_URL || 'http://localhost:3001' }}" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=development" >> $GITHUB_ENV
            echo "API_BASE_URL=${{ secrets.DEV_API_BASE_URL || 'http://localhost:3001' }}" >> $GITHUB_ENV
          fi

      - name: Check for Backend Changes
        id: backend_changes
        run: |
          if [[ "${{ github.event.inputs.force_deploy }}" == "true" ]] || [[ "${{ github.event.inputs.deploy_backend }}" == "true" ]] || git diff --name-only HEAD^ HEAD | grep -q '^backend/' || git diff --name-only HEAD^ HEAD | grep -q '\.github/workflows/'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check for Frontend Changes
        id: frontend_changes
        run: |
          if [[ "${{ github.event.inputs.force_deploy }}" == "true" ]] || [[ "${{ github.event.inputs.deploy_frontend }}" == "true" ]] || git diff --name-only HEAD^ HEAD | grep -q -E '^(src/|public/|Dockerfile|vite.config.ts|\.github/workflows/)'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build & push Backend
        if: ${{ steps.backend_changes.outputs.changed == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          tags: |
            ghcr.io/${{ env.REPO_NAME }}-backend:latest
            ghcr.io/${{ env.REPO_NAME }}-backend:${{ github.sha }}

      - name: Build & push Frontend
        if: ${{ steps.frontend_changes.outputs.changed == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            VITE_API_BASE_URL=${{ env.API_BASE_URL }}
            VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}
            VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}
            VITE_ENABLE_TTS=true
            VITE_ENABLE_STT=true
          tags: |
            ghcr.io/${{ env.REPO_NAME }}-frontend:latest
            ghcr.io/${{ env.REPO_NAME }}-frontend:${{ env.ENVIRONMENT }}
            ghcr.io/${{ env.REPO_NAME }}-frontend:${{ github.sha }}

      - name: Move cache
        if: ${{ steps.backend_changes.outputs.changed == 'true' || steps.frontend_changes.outputs.changed == 'true' }}
        run: |
          if [ -d "/tmp/.buildx-cache-new" ]; then
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          fi

  deploy:
    name: Deploy to Coolify
    runs-on: ubuntu-latest
    needs: build-push
    if: ${{ needs.build-push.outputs.backend_changed == 'true' || needs.build-push.outputs.frontend_changed == 'true' }}
    steps:
      - name: Trigger Coolify Deployment for Backend
        if: ${{ needs.build-push.outputs.backend_changed == 'true' }}
        run: |
          curl --request GET \
            "${{ secrets.COOLIFY_WEBHOOK }}" \
            --header "Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}"

      - name: Trigger Coolify Deployment for Frontend
        if: ${{ needs.build-push.outputs.frontend_changed == 'true' }}
        run: |
          curl --request GET \
            "${{ secrets.COOLIFY_WEBHOOK }}" \
            --header "Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}"
